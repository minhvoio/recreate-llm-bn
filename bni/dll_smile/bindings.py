g.test.restype = c_simplechar_p
g.test.argtypes = [c_simplechar_p]
#g.setLicense.restype = VOID
g.setLicense.argtypes = [c_simplechar_p, ctypes.c_ubyte]
g.new_intArray.restype = ctypes.POINTER(VOID)
g.new_intArray.argtypes = []
g.intArray_NumItems.restype = ctypes.c_int
g.intArray_NumItems.argtypes = [ctypes.POINTER(VOID)]
g.intArray_Items.restype = ctypes.POINTER(ctypes.c_int)
g.intArray_Items.argtypes = [ctypes.POINTER(VOID)]
g.doubleArray_NumItems.restype = ctypes.c_int
g.doubleArray_NumItems.argtypes = [ctypes.POINTER(VOID)]
g.doubleArray_Items.restype = ctypes.POINTER(ctypes.c_double)
g.doubleArray_Items.argtypes = [ctypes.POINTER(VOID)]
g.stringArray_Items.restype = ctypes.POINTER(c_simplechar_p)
g.stringArray_Items.argtypes = [ctypes.POINTER(VOID)]
g.new_network.restype = ctypes.POINTER(VOID)
g.new_network.argtypes = []
g.copy_network.restype = ctypes.POINTER(VOID)
g.copy_network.argtypes = [ctypes.POINTER(VOID)]
#g.delete_network.restype = VOID
g.delete_network.argtypes = [ctypes.POINTER(VOID)]
g.AddNode.restype = ctypes.c_int
g.AddNode.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, c_simplechar_p]
g.DeleteNode.restype = ctypes.c_int
g.DeleteNode.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.AddArc.restype = ctypes.c_int
g.AddArc.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int]
g.RemoveArc.restype = ctypes.c_int
g.RemoveArc.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int]
g.FindNode.restype = ctypes.c_int
g.FindNode.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.HasNode.restype = ctypes.c_int
g.HasNode.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.GetNode.restype = ctypes.POINTER(VOID)
g.GetNode.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.GetAllNodes.restype = ctypes.c_int
g.GetAllNodes.argtypes = [ctypes.POINTER(VOID), ctypes.POINTER(VOID)]
g.GetParents.restype = ctypes.POINTER(VOID)
g.GetParents.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
#g.UpdateBeliefs.restype = VOID
g.UpdateBeliefs.argtypes = [ctypes.POINTER(VOID)]
g.ClearAllEvidence.restype = ctypes.c_int
g.ClearAllEvidence.argtypes = [ctypes.POINTER(VOID)]
g.CalcProbEvidence.restype = ctypes.c_double
g.CalcProbEvidence.argtypes = [ctypes.POINTER(VOID)]
#g.WriteToFile.restype = VOID
g.WriteToFile.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
#g.ReadFromFile.restype = VOID
g.ReadFromFile.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
#g.SetDefaultBNAlgorithm.restype = VOID
g.SetDefaultBNAlgorithm.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.GetDefaultBNAlgorithm.restype = ctypes.c_int
g.GetDefaultBNAlgorithm.argtypes = [ctypes.POINTER(VOID)]
g.GetNumberOfSamples.restype = ctypes.c_int
g.GetNumberOfSamples.argtypes = [ctypes.POINTER(VOID)]
g.SetNumberOfSamples.restype = ctypes.c_int
g.SetNumberOfSamples.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.GetNumberOfDiscretizationSamples.restype = ctypes.c_int
g.GetNumberOfDiscretizationSamples.argtypes = [ctypes.POINTER(VOID)]
#g.SetNumberOfDiscretizationSamples.restype = VOID
g.SetNumberOfDiscretizationSamples.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.net_Header.restype = ctypes.POINTER(VOID)
g.net_Header.argtypes = [ctypes.POINTER(VOID)]
g.node_Info.restype = ctypes.POINTER(VOID)
g.node_Info.argtypes = [ctypes.POINTER(VOID)]
g.node_Value.restype = ctypes.POINTER(VOID)
g.node_Value.argtypes = [ctypes.POINTER(VOID)]
g.node_ChangeType.restype = ctypes.c_int
g.node_ChangeType.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.nodeInfo_Header.restype = ctypes.POINTER(VOID)
g.nodeInfo_Header.argtypes = [ctypes.POINTER(VOID)]
g.nodeInfo_Screen.restype = ctypes.POINTER(VOID)
g.nodeInfo_Screen.argtypes = [ctypes.POINTER(VOID)]
g.nodeInfo_UserProperties.restype = ctypes.POINTER(VOID)
g.nodeInfo_UserProperties.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_GetMatrix.restype = ctypes.POINTER(VOID)
g.nodeValue_GetMatrix.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_GetType.restype = ctypes.c_int
g.nodeValue_GetType.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_IsValueValid.restype = ctypes.c_int
g.nodeValue_IsValueValid.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_IsRealEvidence.restype = ctypes.c_int
g.nodeValue_IsRealEvidence.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_GetEvidence.restype = ctypes.c_int
g.nodeValue_GetEvidence.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_SetEvidence.restype = ctypes.c_int
g.nodeValue_SetEvidence.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.nodeValue_GetVirtualEvidence.restype = ctypes.POINTER(ctypes.c_double)
g.nodeValue_GetVirtualEvidence.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_SetVirtualEvidence.restype = ctypes.c_int
g.nodeValue_SetVirtualEvidence.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(ctypes.c_double)]
g.nodeValue_ClearEvidence.restype = ctypes.c_int
g.nodeValue_ClearEvidence.argtypes = [ctypes.POINTER(VOID)]
g.nodeValue_GetIndexingParents.restype = ctypes.POINTER(VOID)
g.nodeValue_GetIndexingParents.argtypes = [ctypes.POINTER(VOID)]
g.node_Definition.restype = ctypes.POINTER(VOID)
g.node_Definition.argtypes = [ctypes.POINTER(VOID)]
g.nodeDefinition_GetType.restype = ctypes.c_int
g.nodeDefinition_GetType.argtypes = [ctypes.POINTER(VOID)]
g.nodeDefinition_GetMatrix.restype = ctypes.POINTER(VOID)
g.nodeDefinition_GetMatrix.argtypes = [ctypes.POINTER(VOID)]
g.nodeDefinition_GetDoubleDefinition.restype = ctypes.POINTER(VOID)
g.nodeDefinition_GetDoubleDefinition.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
#g.nodeDefinition_SetDoubleDefinition.restype = VOID
g.nodeDefinition_SetDoubleDefinition.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(ctypes.c_double)]
g.nodeDefinition_GetNumberOfOutcomes.restype = ctypes.c_int
g.nodeDefinition_GetNumberOfOutcomes.argtypes = [ctypes.POINTER(VOID)]
g.nodeDefinition_GetOutcomesNames.restype = ctypes.POINTER(VOID)
g.nodeDefinition_GetOutcomesNames.argtypes = [ctypes.POINTER(VOID)]
g.nodeDefinition_AddOutcome.restype = ctypes.c_int
g.nodeDefinition_AddOutcome.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.nodeDefinition_SetNumberOfOutcomes.restype = ctypes.c_int
g.nodeDefinition_SetNumberOfOutcomes.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.nodeDefinition_SetNumberOfOutcomesStr.restype = ctypes.c_int
g.nodeDefinition_SetNumberOfOutcomesStr.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(c_simplechar_p)]
g.nodeDefinition_RenameOutcomes.restype = ctypes.c_int
g.nodeDefinition_RenameOutcomes.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(c_simplechar_p)]
g.nodeDefinition_RemoveOutcome.restype = ctypes.c_int
g.nodeDefinition_RemoveOutcome.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.nodeDefinition_ChangeOrderOfOutcomes.restype = ctypes.c_int
g.nodeDefinition_ChangeOrderOfOutcomes.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(ctypes.c_int)]
g.nodeDefinition_ChangeOrderOfOutcomesWithAddAndRemove.restype = ctypes.c_int
g.nodeDefinition_ChangeOrderOfOutcomesWithAddAndRemove.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(c_simplechar_p), ctypes.c_int, ctypes.POINTER(ctypes.c_int)]
g.equation_SetEquation.restype = ctypes.c_int
g.equation_SetEquation.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.equation_GetDiscreteIntervals.restype = KeyValueArray
g.equation_GetDiscreteIntervals.argtypes = [ctypes.POINTER(VOID)]
g.equation_SetDiscreteIntervals.restype = ctypes.c_int
g.equation_SetDiscreteIntervals.argtypes = [ctypes.POINTER(VOID), KeyValueArray]
g.equation_ClearDiscreteIntervals.restype = ctypes.c_int
g.equation_ClearDiscreteIntervals.argtypes = [ctypes.POINTER(VOID)]
g.equation_GetBounds.restype = ctypes.POINTER(ctypes.c_double)
g.equation_GetBounds.argtypes = [ctypes.POINTER(VOID)]
g.equation_SetBounds.restype = ctypes.c_int
g.equation_SetBounds.argtypes = [ctypes.POINTER(VOID), ctypes.c_double, ctypes.c_double]
g.mau_SetExpression.restype = ctypes.c_int
g.mau_SetExpression.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.valEqEvaluation_GetMean.restype = ctypes.c_double
g.valEqEvaluation_GetMean.argtypes = [ctypes.POINTER(VOID)]
g.valEqEvaluation_GetStdDev.restype = ctypes.c_double
g.valEqEvaluation_GetStdDev.argtypes = [ctypes.POINTER(VOID)]
g.valEqEvaluation_GetSampleMean.restype = ctypes.c_double
g.valEqEvaluation_GetSampleMean.argtypes = [ctypes.POINTER(VOID)]
g.valEqEvaluation_GetSampleStdDev.restype = ctypes.c_double
g.valEqEvaluation_GetSampleStdDev.argtypes = [ctypes.POINTER(VOID)]
g.valEqEvaluation_GetSample.restype = ctypes.c_double
g.valEqEvaluation_GetSample.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.valEqEvaluation_GetNumberOfSamples.restype = ctypes.c_int
g.valEqEvaluation_GetNumberOfSamples.argtypes = [ctypes.POINTER(VOID)]
g.valEqEvaluation_GetSamples.restype = ctypes.POINTER(ctypes.c_double)
g.valEqEvaluation_GetSamples.argtypes = [ctypes.POINTER(VOID)]
#g.valEqEvaluation_SetEvidence.restype = VOID
g.valEqEvaluation_SetEvidence.argtypes = [ctypes.POINTER(VOID), ctypes.c_double]
g.valEqEvaluation_GetEvidence.restype = ctypes.c_double
g.valEqEvaluation_GetEvidence.argtypes = [ctypes.POINTER(VOID)]
g.dMatrix_GetSize.restype = ctypes.c_int
g.dMatrix_GetSize.argtypes = [ctypes.POINTER(VOID)]
g.dMatrix_GetItemsDouble.restype = ctypes.POINTER(ctypes.c_double)
g.dMatrix_GetItemsDouble.argtypes = [ctypes.POINTER(VOID)]
g.header_GetId.restype = c_simplechar_p
g.header_GetId.argtypes = [ctypes.POINTER(VOID)]
#g.header_SetId.restype = VOID
g.header_SetId.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.header_GetName.restype = c_simplechar_p
g.header_GetName.argtypes = [ctypes.POINTER(VOID)]
#g.header_SetName.restype = VOID
g.header_SetName.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.header_GetComment.restype = c_simplechar_p
g.header_GetComment.argtypes = [ctypes.POINTER(VOID)]
#g.header_SetComment.restype = VOID
g.header_SetComment.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.screenInfo_position.restype = ctypes.POINTER(VOID)
g.screenInfo_position.argtypes = [ctypes.POINTER(VOID)]
g.screenInfo_formatting.restype = ctypes.POINTER(ctypes.c_int)
g.screenInfo_formatting.argtypes = [ctypes.POINTER(VOID)]
#g.screenInfo_setFormatting.restype = VOID
g.screenInfo_setFormatting.argtypes = [ctypes.POINTER(VOID), ctypes.POINTER(ctypes.c_int)]
g.rectangle_center_X.restype = ctypes.c_int
g.rectangle_center_X.argtypes = [ctypes.POINTER(VOID)]
g.rectangle_center_Y.restype = ctypes.c_int
g.rectangle_center_Y.argtypes = [ctypes.POINTER(VOID)]
#g.rectangle_center_X_set.restype = VOID
g.rectangle_center_X_set.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
#g.rectangle_center_Y_set.restype = VOID
g.rectangle_center_Y_set.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.rectangle_width.restype = ctypes.c_int
g.rectangle_width.argtypes = [ctypes.POINTER(VOID)]
g.rectangle_height.restype = ctypes.c_int
g.rectangle_height.argtypes = [ctypes.POINTER(VOID)]
#g.rectangle_width_set.restype = VOID
g.rectangle_width_set.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
#g.rectangle_height_set.restype = VOID
g.rectangle_height_set.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.userProperties_AddProperty.restype = ctypes.c_int
g.userProperties_AddProperty.argtypes = [ctypes.POINTER(VOID), c_simplechar_p, c_simplechar_p]
g.userProperties_FindProperty.restype = ctypes.c_int
g.userProperties_FindProperty.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.userProperties_DeleteProperty.restype = ctypes.c_int
g.userProperties_DeleteProperty.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.userProperties_GetNumberOfProperties.restype = ctypes.c_int
g.userProperties_GetNumberOfProperties.argtypes = [ctypes.POINTER(VOID)]
g.userProperties_GetPropertyName.restype = c_simplechar_p
g.userProperties_GetPropertyName.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.userProperties_GetPropertyValue.restype = c_simplechar_p
g.userProperties_GetPropertyValue.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
#g.userProperties_Clear.restype = VOID
g.userProperties_Clear.argtypes = [ctypes.POINTER(VOID)]
g.submodel_CreateSubmodel.restype = ctypes.c_int
g.submodel_CreateSubmodel.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, c_simplechar_p]
g.submodel_DeleteSubmodel.restype = ctypes.c_int
g.submodel_DeleteSubmodel.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.submodel_FindSubmodel.restype = ctypes.c_int
g.submodel_FindSubmodel.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.submodel_GetParent.restype = ctypes.c_int
g.submodel_GetParent.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.submodel_MoveSubmodel.restype = ctypes.c_int
g.submodel_MoveSubmodel.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int]
g.submodel_GetSubmodel.restype = ctypes.POINTER(VOID)
g.submodel_GetSubmodel.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.submodel_Header.restype = ctypes.POINTER(VOID)
g.submodel_Header.argtypes = [ctypes.POINTER(VOID)]
g.submodel_ScreenInfo.restype = ctypes.POINTER(VOID)
g.submodel_ScreenInfo.argtypes = [ctypes.POINTER(VOID)]
g.node_GetSubmodel.restype = ctypes.c_int
g.node_GetSubmodel.argtypes = [ctypes.POINTER(VOID)]
g.node_SetSubmodel.restype = ctypes.c_int
g.node_SetSubmodel.argtypes = [ctypes.POINTER(VOID), c_simplechar_p]
g.submodel_GetIncludedSubmodels.restype = ctypes.POINTER(VOID)
g.submodel_GetIncludedSubmodels.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.submodel_GetIncludedNodes.restype = ctypes.POINTER(VOID)
g.submodel_GetIncludedNodes.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.submodel_GetDeepIncludedSubmodels.restype = ctypes.POINTER(VOID)
g.submodel_GetDeepIncludedSubmodels.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.submodel_GetDeepIncludedNodes.restype = ctypes.POINTER(VOID)
g.submodel_GetDeepIncludedNodes.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.learn_em.restype = ctypes.c_int
g.learn_em.argtypes = [ctypes.POINTER(VOID), c_simplechar_p, ctypes.c_float, ctypes.c_bool, ctypes.c_float, ctypes.c_int]
g.learn_emSimple.restype = ctypes.c_int
g.learn_emSimple.argtypes = [ctypes.POINTER(VOID), c_simplechar_p, ctypes.c_float]
g.learn_pc.restype = ctypes.POINTER(ctypes.c_int)
g.learn_pc.argtypes = [ctypes.POINTER(VOID), c_simplechar_p, ctypes.c_int, ctypes.c_int, ctypes.c_double, ctypes.c_int, ctypes.POINTER(ctypes.c_int)]
g.learn_bs.restype = ctypes.c_int
g.learn_bs.argtypes = [ctypes.POINTER(VOID), c_simplechar_p, ctypes.c_int, ctypes.c_int]
g.learn_tan.restype = ctypes.c_int
g.learn_tan.argtypes = [ctypes.POINTER(VOID), c_simplechar_p, c_simplechar_p, ctypes.c_int]
g.Demorgan_SetParentWeights.restype = ctypes.c_int
g.Demorgan_SetParentWeights.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(ctypes.c_double)]
g.Demorgan_SetParentWeight.restype = ctypes.c_int
g.Demorgan_SetParentWeight.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_double]
g.Demorgan_GetParentWeight.restype = ctypes.c_double
g.Demorgan_GetParentWeight.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.Demorgan_GetParentWeights.restype = ctypes.POINTER(VOID)
g.Demorgan_GetParentWeights.argtypes = [ctypes.POINTER(VOID)]
g.Demorgan_SetParentTypes.restype = ctypes.c_int
g.Demorgan_SetParentTypes.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.POINTER(ctypes.c_int)]
g.Demorgan_SetParentType.restype = ctypes.c_int
g.Demorgan_SetParentType.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int]
g.Demorgan_GetParentType.restype = ctypes.c_int
g.Demorgan_GetParentType.argtypes = [ctypes.POINTER(VOID), ctypes.c_int]
g.Demorgan_GetParentTypes.restype = ctypes.POINTER(VOID)
g.Demorgan_GetParentTypes.argtypes = [ctypes.POINTER(VOID)]
g.Demorgan_GetTemporalParentType.restype = ctypes.c_int
g.Demorgan_GetTemporalParentType.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int]
g.Demorgan_SetTemporalParentType.restype = ctypes.c_int
g.Demorgan_SetTemporalParentType.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int, ctypes.c_int]
g.Demorgan_GetTemporalParentWeight.restype = ctypes.c_double
g.Demorgan_GetTemporalParentWeight.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int]
g.Demorgan_SetTemporalParentWeight.restype = ctypes.c_int
g.Demorgan_SetTemporalParentWeight.argtypes = [ctypes.POINTER(VOID), ctypes.c_int, ctypes.c_int, ctypes.c_double]
g.Demorgan_GetPriorBelief.restype = ctypes.c_double
g.Demorgan_GetPriorBelief.argtypes = [ctypes.POINTER(VOID)]
g.Demorgan_SetPriorBelief.restype = ctypes.c_int
g.Demorgan_SetPriorBelief.argtypes = [ctypes.POINTER(VOID), ctypes.c_double]
